<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
  </startup>
  <log4net>
    <logger name="logerror">
      <level value="ERROR" />
      <appender-ref ref="ErrorAppender" />
    </logger>
    <logger name="loginfo">
      <level value="INFO" />
      <appender-ref ref="InfoAppender" />
    </logger>
    <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
       <encoding value="utf-8"/>
      <!--日志文件名开头-->
      <file value="..\..\Logs\Error\Error"/>
      <param name="StaticLogFileName" value="false" />
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <datePattern value="_yyyy-MM-dd&quot;.log&quot;" />
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true"/>
      <!--变换的形式为日期，这种情况下每天只有一个日志-->
      <!--此时MaxSizeRollBackups和maximumFileSize的节点设置没有意义-->
      <!--<rollingStyle value="Date"/>-->
      <!--变换的形式为日志大小-->
      <!--这种情况下MaxSizeRollBackups和maximumFileSize的节点设置才有意义-->
      <RollingStyle value="Date"/>
      <!--每天记录的日志文件个数，与maximumFileSize配合使用-->
      <MaxSizeRollBackups value="10"/>
      <!--每个日志文件的最大大小-->
      <!--可用的单位:KB|MB|GB-->
      <!--不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="2MB"/>
      <!--日志格式-->
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%date [%t]%-5p %c - %m%n%n"/>-->
       <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level记录类：%logger当前机器名:%property%n记录位置：%location%n消息描述：%property{Message} %n异常：%exception消息：%message%newline%n" />

      </layout>
    </appender>
    <appender name="InfoAppender" type="log4net.Appender.RollingFileAppender">
       <encoding value="utf-8"/>
      <!--日志文件名开头-->
      <file value="..\..\Logs\Info\Log"/>
      <param name="StaticLogFileName" value="false" />
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <datePattern value="_yyyy-MM-dd&quot;.log&quot;" />
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true"/>
      <!--变换的形式为日期，这种情况下每天只有一个日志-->
      <!--此时MaxSizeRollBackups和maximumFileSize的节点设置没有意义-->
      <!--<rollingStyle value="Date"/>-->
      <!--变换的形式为日志大小-->
      <!--这种情况下MaxSizeRollBackups和maximumFileSize的节点设置才有意义-->
      <RollingStyle value="Date"/>
      <!--每天记录的日志文件个数，与maximumFileSize配合使用-->
      <MaxSizeRollBackups value="10"/>
      <!--每个日志文件的最大大小-->
      <!--可用的单位:KB|MB|GB-->
      <!--不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="2MB"/>
      <!--日志格式-->
      <!--
      %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息  
%n(new line):换 行                                                        
%d(datetime):输出当前语句运行的时刻
%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
%t(thread id):当前语句所在的线程ID 
%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等  
%c(class):当前日志对象的名称，例如： 
模式字符串为：%-10c -%m%n  
代码为：   
ILog log=LogManager.GetLogger(“Exam.Log”);  
log.Debug(“Hello”); 
则输出为下面的形式：
Exam.Log       - Hello  
%L：输出语句所在的行 号
%F：输出语句所在的文件名 
%-数字：表示该项的最小长度，如果不够，则用空格填充
例如，转换模式为%r [%t]%-5p %c - %m%n 的 PatternLayout 将生成类似于以下内容的输出：
176 [main] INFO org.foo.Bar - Located nearest gas station.  
        -->
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%date [%t]%-5p %c - %m%n%n"/>-->
       <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level记录类：%logger当前机器名:%property%n记录位置：%location%n消息描述：%property{Message} %n异常：%exception消息：%message%newline%n" />

      </layout>
    </appender>
  </log4net>
</configuration>